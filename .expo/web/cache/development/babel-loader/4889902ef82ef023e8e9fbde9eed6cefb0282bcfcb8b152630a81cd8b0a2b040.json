{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"title\", \"style\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\nimport styles from \"./button.styles\";\nimport { Text } from \"./..\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Button = function Button(_ref) {\n  var title = _ref.title,\n    style = _ref.style,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return _jsx(TouchableOpacity, _objectSpread(_objectSpread({}, props), {}, {\n    style: [styles.menu, style],\n    children: _jsx(Text, {\n      style: [styles.buttonText],\n      children: title\n    })\n  }));\n};\nexport default Button;","map":{"version":3,"names":["React","styles","Text","jsx","_jsx","Button","_ref","title","style","props","_objectWithoutProperties","_excluded","TouchableOpacity","_objectSpread","menu","children","buttonText"],"sources":["F:/angular && app projects/Tic-Tac-Toe--app/src/components/button/button.tsx"],"sourcesContent":["import { View, TouchableOpacity, TouchableOpacityProps } from 'react-native'\r\nimport React, { ReactElement } from 'react'\r\nimport styles from './button.styles'\r\nimport { Text } from '@components'\r\n\r\ntype ButtonProps = {\r\n    title : string\r\n} & TouchableOpacityProps\r\nconst Button = ( {title, style, ...props} : ButtonProps) : ReactElement => {\r\n    return (\r\n        <TouchableOpacity {...props } style={[styles.menu, style]}>\r\n            <Text style={[styles.buttonText, ]}>{title}</Text>\r\n        </TouchableOpacity >\r\n    )\r\n}\r\n\r\nexport default Button"],"mappings":";;;;;;AACA,OAAOA,KAAK,MAAwB,OAAO;AAC3C,OAAOC,MAAM;AACb,SAASC,IAAI;AAAqB,SAAAC,GAAA,IAAAC,IAAA;AAKlC,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAA+D;EAAA,IAAzDC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,KAAK,GAAAF,IAAA,CAALE,KAAK;IAAKC,KAAK,GAAAC,wBAAA,CAAAJ,IAAA,EAAAK,SAAA;EACpC,OACIP,IAAA,CAACQ,gBAAgB,EAAAC,aAAA,CAAAA,aAAA,KAAKJ,KAAK;IAAGD,KAAK,EAAE,CAACP,MAAM,CAACa,IAAI,EAAEN,KAAK,CAAE;IAAAO,QAAA,EACtDX,IAAA,CAACF,IAAI;MAACM,KAAK,EAAE,CAACP,MAAM,CAACe,UAAU,CAAI;MAAAD,QAAA,EAAER;IAAK;EAAQ,GAClC;AAE5B,CAAC;AAED,eAAeF,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}