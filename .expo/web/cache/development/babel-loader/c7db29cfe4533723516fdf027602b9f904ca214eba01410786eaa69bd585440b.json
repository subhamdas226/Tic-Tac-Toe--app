{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport React from 'react';\nimport Text from \"../text/text\";\nimport BoardLine from \"./board-line\";\nimport styles from \"./board.style\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Board = function Board(_ref) {\n  var state = _ref.state,\n    size = _ref.size,\n    disabled = _ref.disabled,\n    onCellPressed = _ref.onCellPressed,\n    gameResult = _ref.gameResult;\n  return _jsxs(View, {\n    style: [styles.board, {\n      width: size,\n      height: size\n    }],\n    children: [state.map(function (cell, index) {\n      return _jsx(TouchableOpacity, {\n        disabled: cell !== null || disabled,\n        onPress: function onPress() {\n          return onCellPressed && onCellPressed(index);\n        },\n        style: styles.cell,\n        children: _jsx(Text, {\n          style: {\n            fontSize: size / 7\n          },\n          children: cell\n        })\n      }, index);\n    }), gameResult && _jsx(BoardLine, {\n      size: size,\n      gameResult: gameResult\n    })]\n  });\n};\nexport default Board;","map":{"version":3,"names":["React","Text","BoardLine","styles","jsx","_jsx","jsxs","_jsxs","Board","_ref","state","size","disabled","onCellPressed","gameResult","View","style","board","width","height","children","map","cell","index","TouchableOpacity","onPress","fontSize"],"sources":["E:/projects/Tic-Tac-Toe--app/src/components/board/board.tsx"],"sourcesContent":["import { View, TouchableOpacity } from 'react-native'\r\nimport React, { ReactElement } from 'react';\r\nimport Text from '../text/text';\r\nimport { BoardState, BoardResult } from '@utils';\r\nimport BoardLine from './board-line';\r\nimport styles from './board.style';\r\ntype cell = 'x' | 'o' | null;\r\n\r\n// type BoardProps = {\r\n//     state: BoardState;\r\n//     size: number;\r\n//     disabled?: boolean;\r\n//     // onCellPressed: Function\r\n//     onCellPressed : (index : number) => void\r\n// }\r\n\r\ninterface BoardProps {\r\n    state: BoardState;\r\n    size: number;\r\n    disabled?: boolean;\r\n    onCellPressed: (index: number) => void,\r\n    gameResult?: BoardResult | false,\r\n}\r\n// [\r\n//     'x',null,'o',\r\n// 'x',null,'o',\r\n// 'x',null,'o'\r\n// ]\r\nconst Board = ({ state, size, disabled, onCellPressed, gameResult }: BoardProps): ReactElement => {\r\n    return (\r\n        <View style={[ styles.board, {\r\n            width: size,\r\n            height: size,\r\n            \r\n        }]}>\r\n            {state.map((cell, index) => {\r\n                return (\r\n                    <TouchableOpacity\r\n                        disabled={cell !== null || disabled}\r\n                        onPress={() => onCellPressed && onCellPressed(index)}\r\n                        style={ styles.cell}\r\n                        key={index}\r\n                    >\r\n                        <Text\r\n                            style={{\r\n                                fontSize: size / 7\r\n                            }}>{cell}</Text>\r\n                    </TouchableOpacity>\r\n                )\r\n            })}\r\n            {gameResult && \r\n            <BoardLine size={size} gameResult={gameResult} />\r\n            }\r\n            {/* {true && \r\n            <BoardLine size={size} gameResult={{ winner: \"o\",\r\n        column : 1, direction: \"V\"}} />\r\n            } */}\r\n            \r\n        </View>\r\n    )\r\n}\r\n\r\nexport default Board"],"mappings":";;AACA,OAAOA,KAAK,MAAwB,OAAO;AAC3C,OAAOC,IAAI;AAEX,OAAOC,SAAS;AAChB,OAAOC,MAAM;AAAsB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAuBnC,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAAC,IAAA,EAAuF;EAAA,IAAjFC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,IAAI,GAAAF,IAAA,CAAJE,IAAI;IAAEC,QAAQ,GAAAH,IAAA,CAARG,QAAQ;IAAEC,aAAa,GAAAJ,IAAA,CAAbI,aAAa;IAAEC,UAAU,GAAAL,IAAA,CAAVK,UAAU;EAC7D,OACIP,KAAA,CAACQ,IAAI;IAACC,KAAK,EAAE,CAAEb,MAAM,CAACc,KAAK,EAAE;MACzBC,KAAK,EAAEP,IAAI;MACXQ,MAAM,EAAER;IAEZ,CAAC,CAAE;IAAAS,QAAA,GACEV,KAAK,CAACW,GAAG,CAAC,UAACC,IAAI,EAAEC,KAAK,EAAK;MACxB,OACIlB,IAAA,CAACmB,gBAAgB;QACbZ,QAAQ,EAAEU,IAAI,KAAK,IAAI,IAAIV,QAAS;QACpCa,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAMZ,aAAa,IAAIA,aAAa,CAACU,KAAK,CAAC;QAAA,CAAC;QACrDP,KAAK,EAAGb,MAAM,CAACmB,IAAK;QAAAF,QAAA,EAGpBf,IAAA,CAACJ,IAAI;UACDe,KAAK,EAAE;YACHU,QAAQ,EAAEf,IAAI,GAAG;UACrB,CAAE;UAAAS,QAAA,EAAEE;QAAI;MAAQ,GALfC,KAAK,CAMK;IAE3B,CAAC,CAAC,EACDT,UAAU,IACXT,IAAA,CAACH,SAAS;MAACS,IAAI,EAAEA,IAAK;MAACG,UAAU,EAAEA;IAAW,EAAG;EAAA,EAO9C;AAEf,CAAC;AAED,eAAeN,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}