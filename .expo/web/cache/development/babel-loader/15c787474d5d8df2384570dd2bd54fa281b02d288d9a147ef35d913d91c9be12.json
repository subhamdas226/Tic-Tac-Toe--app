{"ast":null,"code":"import Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React, { useEffect, useRef } from 'react';\nimport { colors } from \"../../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar SCREEN_WIDTH = Dimensions.get(\"screen\").width;\nvar BoardLine = function BoardLine(_ref) {\n  var size = _ref.size,\n    gameResult = _ref.gameResult;\n  var diagonalHeight = Math.sqrt(Math.pow(size, 2) + Math.pow(size, 2));\n  var animationRef = useRef(new Animated.Value(0));\n  useEffect(function () {\n    Animated.timing(animationRef.current, {\n      toValue: 1,\n      duration: 700,\n      useNativeDriver: false\n    }).start();\n    return function () {};\n  }, []);\n  return _jsxs(_Fragment, {\n    children: [gameResult && gameResult.column && gameResult.direction === \"V\" && _jsx(Animated.View, {\n      style: [styles.line, styles.vLine, {\n        left: 33.333 * gameResult.column - 16.6666 + \"%\",\n        height: animationRef.current.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [\"0%\", \"50%\", \"100%\"]\n        })\n      }]\n    }), gameResult && gameResult.row && gameResult.direction === \"H\" && _jsx(Animated.View, {\n      style: [styles.line, styles.hLine, {\n        top: 33.333 * gameResult.row - 16.6666 + \"%\",\n        width: animationRef.current.interpolate({\n          inputRange: [0, 0.5, 1],\n          outputRange: [\"0%\", \"50%\", \"100%\"]\n        })\n      }]\n    }), gameResult && gameResult.diagonal && gameResult.direction === \"D\" && _jsx(Animated.View, {\n      style: [styles.line, styles.dLine, {\n        height: animationRef.current.interpolate({\n          inputRange: [0, 1],\n          outputRange: [0, diagonalHeight]\n        }),\n        transform: [{\n          translateY: animationRef.current.interpolate({\n            inputRange: [0, 1],\n            outputRange: [size / 2, -(diagonalHeight - size) / 2]\n          })\n        }, {\n          rotateZ: gameResult.diagonal === \"COUNTER\" ? \"-45deg\" : \"45deg\"\n        }]\n      }]\n    })]\n  });\n};\nexport default BoardLine;\nvar styles = StyleSheet.create({\n  line: {\n    position: \"absolute\",\n    backgroundColor: colors.lightpurple\n  },\n  vLine: {\n    width: 4\n  },\n  hLine: {\n    height: 4\n  },\n  dLine: {\n    width: 4,\n    top: 0,\n    left: '50%'\n  }\n});","map":{"version":3,"names":["React","useEffect","useRef","colors","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SCREEN_WIDTH","Dimensions","get","width","BoardLine","_ref","size","gameResult","diagonalHeight","Math","sqrt","pow","animationRef","Animated","Value","timing","current","toValue","duration","useNativeDriver","start","children","column","direction","View","style","styles","line","vLine","left","height","interpolate","inputRange","outputRange","row","hLine","top","diagonal","dLine","transform","translateY","rotateZ","StyleSheet","create","position","backgroundColor","lightpurple"],"sources":["F:/angular && app projects/Tic-Tac-Toe--app/src/components/board/board-line.tsx"],"sourcesContent":["import { Animated, Dimensions, StyleSheet, Text, View } from 'react-native'\r\nimport React, { ReactElement, useEffect, useRef } from 'react'\r\nimport { BoardResult, colors } from '@utils'\r\n\r\ntype BoardLineProps = {\r\n    size: number,\r\n    gameResult?: BoardResult | false\r\n}\r\nconst SCREEN_WIDTH = Dimensions.get(\"screen\").width;\r\nconst BoardLine = ({ size, gameResult }: BoardLineProps):\r\n ReactElement => {\r\n\r\n    const diagonalHeight = Math.sqrt(Math.pow(size,2) \r\n    + Math.pow( size, 2) );\r\n\r\n    const animationRef = useRef<Animated.Value>(new Animated.Value(0)) ;\r\n\r\n\r\n    useEffect(() => {\r\n      Animated.timing(animationRef.current, {\r\n        toValue  : 1,\r\n        duration : 700,\r\n        useNativeDriver : false,\r\n      }).start();\r\n    \r\n      return () => {\r\n        \r\n      }\r\n    }, [])\r\n    \r\n    return (\r\n        <>\r\n            {gameResult && gameResult.column && \r\n            gameResult.direction === \"V\" && \r\n            <Animated.View style={[styles.line, styles.vLine, {\r\n                left : `${33.333 * gameResult.column - 16.6666}%`,\r\n                height : animationRef.current.interpolate({\r\n                    inputRange : [0,0.5,1],\r\n                    outputRange : [\"0%\",\"50%\",\"100%\"]\r\n                })\r\n            }]}>\r\n                \r\n            </Animated.View>\r\n            }\r\n\r\n            {gameResult && gameResult.row && \r\n            gameResult.direction === \"H\" && \r\n            <Animated.View style={[styles.line, styles.hLine, {\r\n                top : `${33.333 * gameResult.row - 16.6666}%`,\r\n                width : animationRef.current.interpolate({\r\n                    inputRange : [0,0.5,1],\r\n                    outputRange : [\"0%\",\"50%\",\"100%\"]\r\n                })\r\n            }]}>\r\n                \r\n            </Animated.View>\r\n            }\r\n\r\n            {gameResult && gameResult.diagonal && \r\n            gameResult.direction === \"D\" && \r\n            <Animated.View style={[styles.line, styles.dLine, {\r\n                // height : diagonalHeight,\r\n                height : animationRef.current.interpolate({\r\n                    inputRange : [0,1],\r\n                    outputRange : [0,diagonalHeight]\r\n                }),\r\n                transform : [\r\n                    {\r\n                        // translateY : -(diagonalHeight - size )/2,\r\n                        translateY : animationRef.current.interpolate({\r\n                            inputRange : [0,1],\r\n                            outputRange : [ size/2 ,-(diagonalHeight - size )/2]\r\n                        })\r\n                    },\r\n                    {\r\n                        rotateZ : \r\n                            gameResult.diagonal === \"COUNTER\" \r\n                            ? \"-45deg\" \r\n                            : \"45deg\"\r\n                    }\r\n                ]\r\n            }]}>\r\n                \r\n            </Animated.View>\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default BoardLine\r\n\r\nconst styles = StyleSheet.create({\r\n    line : {\r\n         position: \"absolute\",\r\n         backgroundColor : colors.lightpurple\r\n    },\r\n    vLine: {\r\n        width :4,\r\n        // height : '100%',\r\n\r\n    },\r\n    hLine : {\r\n        height : 4,\r\n        // width :'100%'\r\n    },\r\n    dLine : {\r\n        width: 4,\r\n        // height: '100%',\r\n        top : 0,\r\n        left : '50%'\r\n    }\r\n})"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}